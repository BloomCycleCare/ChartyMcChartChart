package com.bloomcyclecare.cmcc.data.models;

import com.bloomcyclecare.cmcc.data.entities.Instructions;
import com.google.common.collect.ImmutableList;

import org.joda.time.LocalDate;

import java.util.List;

public class TrainingCycles {

  private static final String REGULAR_CYCLES_TITLE = "Regular Cycles";
  private static final String LONG_CYCLES_TITLE = "Long Cycles";

  public static TrainingCycle REGULAR_CYCLES_A = TrainingCycle
      .withInstructions(Instructions.createBasicInstructions(LocalDate.now()))
      .withTitle(REGULAR_CYCLES_TITLE)
      .withSubtitle("A")
      .addEntry(TrainingEntry.forText("H"))
      .addEntry(TrainingEntry.forText("H"))
      .addEntry(TrainingEntry.forText("M"))
      .addEntry(TrainingEntry.forText("M"))
      .addEntry(TrainingEntry.forText("L0AD"))
      .addEntry(TrainingEntry.forText("L0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("2AD"))
      .addEntry(TrainingEntry.forText("4X1", "A"));

  public static TrainingCycle REGULAR_CYCLES_B = TrainingCycle
      .withInstructions(Instructions.createBasicInstructions(LocalDate.now()))
      .withTitle(REGULAR_CYCLES_TITLE)
      .withSubtitle("B")
      .addEntry(TrainingEntry.forText("H"))
      .addEntry(TrainingEntry.forText("M"))
      .addEntry(TrainingEntry.forText("L0AD"))
      .addEntry(TrainingEntry.forText("L0AD"))
      .addEntry(TrainingEntry.forText("VL0AD"))
      .addEntry(TrainingEntry.forText("2X1"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("8CX1"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("2X1"))
      .addEntry(TrainingEntry.forText("2X1"))
      .addEntry(TrainingEntry.forText("8KX2"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD", "B"));

  public static TrainingCycle REGULAR_CYCLES_C = TrainingCycle
      .withInstructions(Instructions.createBasicInstructions(LocalDate.now()))
      .withTitle(REGULAR_CYCLES_TITLE)
      .withSubtitle("C")
      .addEntry(TrainingEntry.forText("H"))
      .addEntry(TrainingEntry.forText("H"))
      .addEntry(TrainingEntry.forText("M"))
      .addEntry(TrainingEntry.forText("M", "C"));

  public static TrainingCycle REGULAR_CYCLES_D = TrainingCycle
      .withInstructions(Instructions.createBasicInstructions(LocalDate.now()))
      .withTitle(REGULAR_CYCLES_TITLE)
      .withSubtitle("D")
      .addEntry(TrainingEntry.forText("H"))
      .addEntry(TrainingEntry.forText("H"))
      .addEntry(TrainingEntry.forText("M"))
      .addEntry(TrainingEntry.forText("M"))
      .addEntry(TrainingEntry.forText("L0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("6PCX2"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("4X1"))
      .addEntry(TrainingEntry.forText("8CX1"))
      .addEntry(TrainingEntry.forText("8CX2"))
      .addEntry(TrainingEntry.forText("10KLAD"))
      .addEntry(TrainingEntry.forText("10WLX2"))
      .addEntry(TrainingEntry.forText("0AD", "D"));

  public static TrainingCycle REGULAR_CYCLES_L = TrainingCycle
      .withInstructions(Instructions.createBasicInstructions(LocalDate.now()))
      .withTitle(REGULAR_CYCLES_TITLE)
      .withSubtitle("L")
      .addEntry(TrainingEntry.forText("H"))
      .addEntry(TrainingEntry.forText("H"))
      .addEntry(TrainingEntry.forText("M"))
      .addEntry(TrainingEntry.forText("L0AD"))
      .addEntry(TrainingEntry.forText("VL0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("8CX2"))
      .addEntry(TrainingEntry.forText("8CAD"))
      .addEntry(TrainingEntry.forText("8KX2"))
      .addEntry(TrainingEntry.forText("10KLX2", "L"));

  public static TrainingCycle REGULAR_CYCLES_K = TrainingCycle
      .withInstructions(Instructions.createBasicInstructions(LocalDate.now()))
      .withTitle(REGULAR_CYCLES_TITLE)
      .withSubtitle("K")
      .addEntry(TrainingEntry.forText("H"))
      .addEntry(TrainingEntry.forText("H"))
      .addEntry(TrainingEntry.forText("M"))
      .addEntry(TrainingEntry.forText("L0AD"))
      .addEntry(TrainingEntry.forText("L0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("8CX1"))
      .addEntry(TrainingEntry.forText("8CX1"))
      .addEntry(TrainingEntry.forText("10KX2"))
      .addEntry(TrainingEntry.forText("10WLAD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("2X1"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("2X2"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("4AD", "K"));

  public static TrainingCycle REGULAR_CYCLES_J = TrainingCycle
      .withInstructions(Instructions.createBasicInstructions(LocalDate.now()))
      .withTitle(REGULAR_CYCLES_TITLE)
      .withSubtitle("J")
      .addEntry(TrainingEntry.forText("H"))
      .addEntry(TrainingEntry.forText("H"))
      .addEntry(TrainingEntry.forText("M"))
      .addEntry(TrainingEntry.forText("L0AD"))
      .addEntry(TrainingEntry.forText("L0AD"))
      .addEntry(TrainingEntry.forText("VL0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("4X2"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("8CX1"))
      .addEntry(TrainingEntry.forText("8CX1"))
      .addEntry(TrainingEntry.forText("8KX2"))
      .addEntry(TrainingEntry.forText("10CLX2"))
      .addEntry(TrainingEntry.forText("VL0AD"))
      .addEntry(TrainingEntry.forText("VL2X1"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("2X1", "J"));

  public static TrainingCycle REGULAR_CYCLES_I = TrainingCycle
      .withInstructions(Instructions.createBasicInstructions(LocalDate.now()))
      .withTitle(REGULAR_CYCLES_TITLE)
      .withSubtitle("I")
      .addEntry(TrainingEntry.forText("L0AD"))
      .addEntry(TrainingEntry.forText("H"))
      .addEntry(TrainingEntry.forText("M"))
      .addEntry(TrainingEntry.forText("M"))
      .addEntry(TrainingEntry.forText("L0AD"))
      .addEntry(TrainingEntry.forText("VL0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("6CX2"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("6CX1"))
      .addEntry(TrainingEntry.forText("8CX2"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("6CX2"))
      .addEntry(TrainingEntry.forText("6CX1"))
      .addEntry(TrainingEntry.forText("8CX2"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD", "I"));

  public static TrainingCycle REGULAR_CYCLES_H = TrainingCycle
      .withInstructions(Instructions.createBasicInstructions(LocalDate.now()))
      .withTitle(REGULAR_CYCLES_TITLE)
      .withSubtitle("H")
      .addEntry(TrainingEntry.forText("H"))
      .addEntry(TrainingEntry.forText("H"))
      .addEntry(TrainingEntry.forText("M"))
      .addEntry(TrainingEntry.forText("M"))
      .addEntry(TrainingEntry.forText("L0AD"))
      .addEntry(TrainingEntry.forText("L0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("8CX2"))
      .addEntry(TrainingEntry.forText("8KX2"))
      .addEntry(TrainingEntry.forText("10SLX1"))
      .addEntry(TrainingEntry.forText("10WLAD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("2X1"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("10CX1"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD", "H"));

  public static TrainingCycle REGULAR_CYCLES_G = TrainingCycle
      .withInstructions(Instructions.createBasicInstructions(LocalDate.now()))
      .withTitle(REGULAR_CYCLES_TITLE)
      .withSubtitle("G")
      .addEntry(TrainingEntry.forText("H"))
      .addEntry(TrainingEntry.forText("H"))
      .addEntry(TrainingEntry.forText("M"))
      .addEntry(TrainingEntry.forText("L0AD"))
      .addEntry(TrainingEntry.forText("L0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("8CX1"))
      .addEntry(TrainingEntry.forText("8CX2"))
      .addEntry(TrainingEntry.forText("10KLAD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("2X1"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("2AD", "G"));

  public static TrainingCycle REGULAR_CYCLES_F = TrainingCycle
      .withInstructions(Instructions.createBasicInstructions(LocalDate.now()))
      .withTitle(REGULAR_CYCLES_TITLE)
      .withSubtitle("F")
      .addEntry(TrainingEntry.forText("H"))
      .addEntry(TrainingEntry.forText("H"))
      .addEntry(TrainingEntry.forText("M"))
      .addEntry(TrainingEntry.forText("M"))
      .addEntry(TrainingEntry.forText("L0AD"))
      .addEntry(TrainingEntry.forText("VL6CX2"))
      .addEntry(TrainingEntry.forText("VL10KLX2"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD", "F"));

  public static TrainingCycle REGULAR_CYCLES_E = TrainingCycle
      .withInstructions(Instructions.createBasicInstructions(LocalDate.now()))
      .withTitle(REGULAR_CYCLES_TITLE)
      .withSubtitle("E")
      .addEntry(TrainingEntry.forText("H"))
      .addEntry(TrainingEntry.forText("M"))
      .addEntry(TrainingEntry.forText("M"))
      .addEntry(TrainingEntry.forText("L0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("2X1"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("6CX1"))
      .addEntry(TrainingEntry.forText("8CX2"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("2X2", "E"));

  public static TrainingCycle LONG_CYCLES_1 = TrainingCycle
      .withInstructions(Instructions.createBasicInstructions(LocalDate.now()))
      .withTitle(LONG_CYCLES_TITLE)
      .addEntry(TrainingEntry.forText("VL2AD"))
      .addEntry(TrainingEntry.forText("H"))
      .addEntry(TrainingEntry.forText("M"))
      .addEntry(TrainingEntry.forText("M"))
      .addEntry(TrainingEntry.forText("L0AD"))
      .addEntry(TrainingEntry.forText("VL0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD", "A"))
      .addEntry(TrainingEntry.forText("2AD"))
      .addEntry(TrainingEntry.forText("2AD"))
      .addEntry(TrainingEntry.forText("4AD"))
      .addEntry(TrainingEntry.forText("6CX1"))
      .addEntry(TrainingEntry.forText("0AD", "B"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("8CX2", "C"))
      .addEntry(TrainingEntry.forText("8CX1"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("2AD"))
      .addEntry(TrainingEntry.forText("6CX1"))
      .addEntry(TrainingEntry.forText("8KX2"))
      .addEntry(TrainingEntry.forText("8KX1"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD", "D"))
      .addEntry(TrainingEntry.forText("2AD"))
      .addEntry(TrainingEntry.forText("2AD"))
      .addEntry(TrainingEntry.forText("10CKX2"))
      .addEntry(TrainingEntry.forText("10CKX1", "E"))
      .addEntry(TrainingEntry.forText("10KLX2"))
      .addEntry(TrainingEntry.forText("10KLAD"))
      .addEntry(TrainingEntry.forText("10KLAD"))
      .addEntry(TrainingEntry.forText("8CX1"))
      .addEntry(TrainingEntry.forText("2AD", "F"))
      .addEntry(TrainingEntry.forText("2AD"))
      .addEntry(TrainingEntry.forText("2AD", "G"))
      .addEntry(TrainingEntry.forText("2AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"));

  public static TrainingCycle LONG_CYCLES_2 = TrainingCycle
      .withInstructions(Instructions.createBasicInstructions(LocalDate.now()))
      .withTitle(LONG_CYCLES_TITLE)
      .addEntry(TrainingEntry.forText("H"))
      .addEntry(TrainingEntry.forText("H"))
      .addEntry(TrainingEntry.forText("M"))
      .addEntry(TrainingEntry.forText("M", "H"))
      .addEntry(TrainingEntry.forText("L0AD"))
      .addEntry(TrainingEntry.forText("VL0AD"))
      .addEntry(TrainingEntry.forText("2AD"))
      .addEntry(TrainingEntry.forText("2AD"))
      .addEntry(TrainingEntry.forText("6CX1"))
      .addEntry(TrainingEntry.forText("8CX2"))
      .addEntry(TrainingEntry.forText("6CX1"))
      .addEntry(TrainingEntry.forText("0AD", "I"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("8KX2"))
      .addEntry(TrainingEntry.forText("10KX1"))
      .addEntry(TrainingEntry.forText("10KLX2"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("2AD"))
      .addEntry(TrainingEntry.forText("2AD", "J"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("8CX1", "K"))
      .addEntry(TrainingEntry.forText("10CKX1"))
      .addEntry(TrainingEntry.forText("10WLAD"))
      .addEntry(TrainingEntry.forText("10KLAD"))
      .addEntry(TrainingEntry.forText("10KLAD"))
      .addEntry(TrainingEntry.forText("10CX1"))
      .addEntry(TrainingEntry.forText("8CX2"))
      .addEntry(TrainingEntry.forText("6CX1"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("2AD", "L"))
      .addEntry(TrainingEntry.forText("2AD"))
      .addEntry(TrainingEntry.forText("2AD"))
      .addEntry(TrainingEntry.forText("4X1"))
      .addEntry(TrainingEntry.forText("0AD"))
      .addEntry(TrainingEntry.forText("6CX1"));

  public static List<TrainingCycle> REGULAR_CYCLES = ImmutableList.of(
      REGULAR_CYCLES_A, REGULAR_CYCLES_B, REGULAR_CYCLES_C, REGULAR_CYCLES_D, REGULAR_CYCLES_E,
      REGULAR_CYCLES_F, REGULAR_CYCLES_G, REGULAR_CYCLES_H, REGULAR_CYCLES_I, REGULAR_CYCLES_J,
      REGULAR_CYCLES_K, REGULAR_CYCLES_L);

  public static List<TrainingCycle> LONG_CYCLES = ImmutableList.of(LONG_CYCLES_1, LONG_CYCLES_2);
}
